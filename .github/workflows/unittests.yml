name: Unit tests

on: [push, pull_request]
  # pull_request:
  #   types: [opened, synchronize, reopened]

jobs:

  unittest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Edit config file
      run: |
        cp yeti.conf.sample yeti.conf
        sed -i '42s/# host =/host =/' yeti.conf
        sed -i '43s/# port =/port =/' yeti.conf
        sed -i '44s/# username = yeti/username = root/' yeti.conf
        sed -i '45s/# password = STRONG_PASSWORD/password =/' yeti.conf
        sed -i '46s/# database = /database =/' yeti.conf
    - name: Install dependencies
      run: |
        pip install poetry
        poetry install
    - name: Start redis & arangodb conainers
      run: docker compose -f extras/docker/dev/docker-compose.yaml up -d redis arangodb
    - name: Test with unittest
      run: |
        poetry run python -m unittest discover -s tests/schemas -p '*.py'
        poetry run python -m unittest discover -s tests/apiv2 -p '*.py'
